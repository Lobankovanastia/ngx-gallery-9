{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-gallery-9/lib/ngx-gallery-helper.service.ts","ng://ngx-gallery-9/lib/ngx-gallery-animation.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-image-size.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-layout.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-order.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-action.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-options.ts","ng://ngx-gallery-9/lib/ngx-gallery-ordered-image.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-preview/ngx-gallery-preview.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-image.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-image/ngx-gallery-image.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component.ts","ng://ngx-gallery-9/lib/ngx-gallery.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-action/ngx-gallery-action.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-arrows/ngx-gallery-arrows.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-bullets/ngx-gallery-bullets.component.ts","ng://ngx-gallery-9/lib/ngx-gallery.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__values","o","m","Symbol","iterator","call","next","value","done","__read","n","e","ar","push","error","NgxGalleryHelperService","renderer","this","swipeHandlers","Map","prototype","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","Renderer2","Injectable","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageSize","Cover","Contain","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryOrder","Column","Row","Page","action","icon","disabled","titleText","onClick","obj","preventDefaults","undefined","breakpoint","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","lazyLoading","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","NgxGalleryAction","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","src","index","size","class","_a","NgxGalleryPreviewComponent","sanitization","elementRef","helperService","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","onOpen","EventEmitter","onClose","onActiveChange","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnInit","arrows","arrowsAutoHide","ngOnChanges","changes","_this","swipe","showNext","showPrev","ngOnDestroy","keyDownListener","onMouseEnter","onMouseLeave","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","emit","show","forceFullscreen","manageFullscreen","closeFullscreen","stopAutoPlay","imageMouseEnter","autoPlay","autoPlayPauseOnHover","imageMouseLeave","startAutoPlay","timer","setTimeout","autoPlayInterval","clearTimeout","showAtIndex","canShowNext","images","canShowPrev","infinityMove","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","getSafeUrl","substr","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","bypassSecurityTrustStyle","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","preventDefault","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","animation","_show","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","img","complete","naturalWidth","DomSanitizer","ElementRef","ChangeDetectorRef","Input","Output","ViewChild","HostListener","Component","selector","template","small","medium","big","label","mediumSize","NgxGalleryImageComponent","platformId","canChangeImage","paramIndex","decorator","ngAfterContentInit","isPlatformBrowser","elementSize","NgxGalleryMediumImageSize","offsetWidth","offsetHeight","setImageClasses","reset","selectedIndex","_b","_c","getImages","indexes_1","prevIndex","nextIndex","filter","indexOf","setInterval","clearInterval","handleClick","event","clickable","stopPropagation","setChangeTimeout","timeout","Inject","args","PLATFORM_ID","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","count","getSafeStyle","NgxGalleryComponent","myElement","imagesReady","change","previewOpen","previewClose","previewChange","oldImagesLength","prevBreakpoint","options","opt","NgxGalleryOptions","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","thubmnails","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","smallImages","mediumImages","NgxGalleryOrderedImage","bigImages","labels","breakpoints","window","pop","concat","__spread","a","sort","b","combineOptions","second","keys","val","HostBinding","providers","NgxGalleryActionComponent","changeDetection","ChangeDetectionStrategy","OnPush","NgxGalleryArrowsComponent","onPrevClick","onNextClick","handlePrevClick","handleNextClick","NgxGalleryBulletsComponent","active","onChange","getBullets","Array","handleChange","NgxGalleryModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Renderer2, ElementRef } from '@angular/core';\n\n@Injectable()\nexport class NgxGalleryHelperService {\n  private swipeHandlers: Map<string, Function[]> = new Map<string, Function[]>();\n\n  constructor(private renderer: Renderer2) {}\n\n  manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: Function, prevHandler: Function): void {\n\n      const handlers = this.getSwipeHandlers(id);\n\n      // swipeleft and swiperight are available only if hammerjs is included\n      try {\n          if (status && !handlers) {\n              this.swipeHandlers.set(id, [\n                  this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n                  this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n              ]);\n          } else if (!status && handlers) {\n              handlers.map((handler) => handler());\n              this.removeSwipeHandlers(id);\n          }\n      } catch (e) {}\n  }\n\n  validateUrl(url: string): string {\n      if (url.replace) {\n          return url.replace(new RegExp(' ', 'g'), '%20')\n              .replace(new RegExp('\\'', 'g'), '%27');\n      } else {\n          return url;\n      }\n  }\n\n  getBackgroundUrl(image: string) {\n      return 'url(\\'' + this.validateUrl(image) + '\\')';\n  }\n\n  private getSwipeHandlers(id: string): Function[] | undefined {\n      return this.swipeHandlers.get(id);\n  }\n\n  private removeSwipeHandlers(id: string): void {\n      this.swipeHandlers.delete(id);\n  }\n}\n","export class NgxGalleryAnimation {\n    static Fade = 'fade';\n    static Slide = 'slide';\n    static Rotate = 'rotate';\n    static Zoom = 'zoom';\n}\n","export class NgxGalleryImageSize {\n    static Cover = 'cover';\n    static Contain = 'contain';\n}\n","export class NgxGalleryLayout {\n    static ThumbnailsTop = 'thumbnails-top';\n    static ThumbnailsBottom = 'thumbnails-bottom';\n}\n","export class NgxGalleryOrder {\n    static Column = 1;\n    static Row = 2;\n    static Page = 3;\n}\n","export interface INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n}\n\nexport class NgxGalleryAction implements INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n\n    constructor(action: INgxGalleryAction) {\n        this.icon = action.icon;\n        this.disabled = action.disabled ? action.disabled : false;\n        this.titleText = action.titleText ? action.titleText : '';\n\n        this.onClick = action.onClick;\n    }\n}\n","import { NgxGalleryAnimation } from './ngx-gallery-animation.model';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\n\nexport interface INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n}\n\nexport class NgxGalleryOptions implements INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n\n    constructor(obj: INgxGalleryOptions) {\n\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\n\n        function use<T>(source: T, defaultValue: T): T {\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n        }\n\n        this.breakpoint = use(obj.breakpoint, undefined);\n        this.width = use(obj.width, '500px');\n        this.height = use(obj.height, '400px');\n        this.fullWidth = use(obj.fullWidth, false);\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n        this.startIndex = use(obj.startIndex, 0);\n        this.linkTarget = use(obj.linkTarget, '_blank');\n        this.lazyLoading = use(obj.lazyLoading, true);\n\n        this.image = use(obj.image, true);\n        this.imagePercent = use(obj.imagePercent, 75);\n        this.imageArrows = use(obj.imageArrows, true);\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n        this.imageSwipe = use(obj.imageSwipe, false);\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\n        if (obj && obj.imageActions && obj.imageActions.length) {\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\n        }\n        this.imageActions = use(obj.imageActions, []);\n        this.imageDescription = use(obj.imageDescription, false);\n        this.imageBullets = use(obj.imageBullets, false);\n\n        this.thumbnails = use(obj.thumbnails, true);\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\n        }\n        this.thumbnailActions = use(obj.thumbnailActions, []);\n\n        this.preview = use(obj.preview, true);\n        this.previewDescription = use(obj.previewDescription, true);\n        this.previewArrows = use(obj.previewArrows, true);\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n        this.previewSwipe = use(obj.previewSwipe, false);\n        this.previewFullscreen = use(obj.previewFullscreen, false);\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n        this.previewAnimation = use(obj.previewAnimation, true);\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\n        this.previewZoom = use(obj.previewZoom, false);\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n        this.previewRotate = use(obj.previewRotate, false);\n        this.previewDownload = use(obj.previewDownload, false);\n        this.previewCustom = use(obj.previewCustom, undefined);\n        this.previewBullets = use(obj.previewBullets, false);\n\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n        if (obj && obj.actions && obj.actions.length) {\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\n        }\n        this.actions = use(obj.actions, []);\n    }\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\nimport {NgxGalleryMediumImageSize} from './ngx-gallery-image.model';\n\nexport interface INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    index: number;\n    size?: NgxGalleryMediumImageSize;\n    class?: string;\n}\n\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    index: number;\n    size?: NgxGalleryMediumImageSize;\n    class?: string;\n\n    constructor(obj: INgxGalleryOrderedImage) {\n        this.src = obj.src;\n        this.index = obj.index;\n        this.size = obj.size;\n        this.class = obj.class ?? '';\n    }\n}\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, SimpleChanges, HostListener, Renderer2 } from '@angular/core';\nimport { SafeResourceUrl, SafeUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\n\n@Component({\n  selector: 'ngx-gallery-preview',\n  templateUrl: './ngx-gallery-preview.component.html',\n  styleUrls: ['./ngx-gallery-preview.component.scss']\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnChanges {\n\n  src: SafeUrl;\n  srcIndex: number;\n  description: string;\n  showSpinner = false;\n  positionLeft = 0;\n  positionTop = 0;\n  zoomValue = 1;\n  loading = false;\n  rotateValue = 0;\n  index = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() fullscreen: boolean;\n  @Input() forceFullscreen: boolean;\n  @Input() closeOnClick: boolean;\n  @Input() closeOnEsc: boolean;\n  @Input() keyboardNavigation: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() closeIcon: string;\n  @Input() fullscreenIcon: string;\n  @Input() spinnerIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() zoom: boolean;\n  @Input() zoomStep: number;\n  @Input() zoomMax: number;\n  @Input() zoomMin: number;\n  @Input() zoomInIcon: string;\n  @Input() zoomOutIcon: string;\n  @Input() animation: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() rotate: boolean;\n  @Input() rotateLeftIcon: string;\n  @Input() rotateRightIcon: string;\n  @Input() download: boolean;\n  @Input() downloadIcon: string;\n  @Input() bullets: string;\n\n  @Output() onOpen = new EventEmitter();\n  @Output() onClose = new EventEmitter();\n  @Output() onActiveChange = new EventEmitter<number>();\n\n  @ViewChild('previewImage') previewImage: ElementRef;\n\n  private isOpen = false;\n  private timer;\n  private initialX = 0;\n  private initialY = 0;\n  private initialLeft = 0;\n  private initialTop = 0;\n  private isMove = false;\n\n  private keyDownListener: Function;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n      private helperService: NgxGalleryHelperService, private renderer: Renderer2,\n      private changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n      if (this.arrows && this.arrowsAutoHide) {\n          this.arrows = false;\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef,\n          'preview', () => this.showNext(), () => this.showPrev());\n      }\n  }\n\n  ngOnDestroy() {\n      if (this.keyDownListener) {\n          this.keyDownListener();\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      if (this.arrowsAutoHide && !this.arrows) {\n          this.arrows = true;\n      }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      if (this.arrowsAutoHide && this.arrows) {\n          this.arrows = false;\n      }\n  }\n\n  onKeyDown(e) {\n      if (this.isOpen) {\n          if (this.keyboardNavigation) {\n              if (this.isKeyboardPrev(e)) {\n                  this.showPrev();\n              } else if (this.isKeyboardNext(e)) {\n                  this.showNext();\n              }\n          }\n          if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n              this.close();\n          }\n      }\n  }\n\n  open(index: number): void {\n      this.onOpen.emit();\n\n      this.index = index;\n      this.isOpen = true;\n      this.show(true);\n\n      if (this.forceFullscreen) {\n          this.manageFullscreen();\n      }\n\n      this.keyDownListener = this.renderer.listen(\"window\", \"keydown\", (e) => this.onKeyDown(e));\n  }\n\n  close(): void {\n      this.isOpen = false;\n      this.closeFullscreen();\n      this.onClose.emit();\n\n      this.stopAutoPlay();\n\n      if (this.keyDownListener) {\n          this.keyDownListener();\n      }\n  }\n\n  imageMouseEnter(): void {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.stopAutoPlay();\n      }\n  }\n\n  imageMouseLeave(): void {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.startAutoPlay();\n      }\n  }\n\n  startAutoPlay(): void {\n      if (this.autoPlay) {\n          this.stopAutoPlay();\n\n          this.timer = setTimeout(() => {\n              if (!this.showNext()) {\n                  this.index = -1;\n                  this.showNext();\n              }\n          }, this.autoPlayInterval);\n      }\n  }\n\n  stopAutoPlay(): void {\n      if (this.timer) {\n          clearTimeout(this.timer);\n      }\n  }\n\n  showAtIndex(index: number): void {\n      this.index = index;\n      this.show();\n  }\n\n  showNext(): boolean {\n      if (this.canShowNext()) {\n          this.index++;\n\n          if (this.index === this.images.length) {\n              this.index = 0;\n          }\n\n          this.show();\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  showPrev(): void {\n      if (this.canShowPrev()) {\n          this.index--;\n\n          if (this.index < 0) {\n              this.index = this.images.length - 1;\n          }\n\n          this.show();\n      }\n  }\n\n  canShowNext(): boolean {\n      if (this.loading) {\n          return false;\n      } else if (this.images) {\n          return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.loading) {\n          return false;\n      } else if (this.images) {\n          return this.infinityMove || this.index > 0 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  manageFullscreen(): void {\n      if (this.fullscreen || this.forceFullscreen) {\n          const doc = <any>document;\n\n          if (!doc.fullscreenElement && !doc.mozFullScreenElement\n              && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n              this.openFullscreen();\n          } else {\n              this.closeFullscreen();\n          }\n      }\n  }\n\n  getSafeUrl(image: string): SafeUrl {\n      return image.substr(0, 10) === 'data:image' ?\n          image : this.sanitization.bypassSecurityTrustUrl(image);\n  }\n\n  zoomIn(): void {\n      if (this.canZoomIn()) {\n          this.zoomValue += this.zoomStep;\n\n          if (this.zoomValue > this.zoomMax) {\n              this.zoomValue = this.zoomMax;\n          }\n      }\n  }\n\n  zoomOut(): void {\n      if (this.canZoomOut()) {\n          this.zoomValue -= this.zoomStep;\n\n          if (this.zoomValue < this.zoomMin) {\n              this.zoomValue = this.zoomMin;\n          }\n\n          if (this.zoomValue <= 1) {\n              this.resetPosition()\n          }\n      }\n  }\n\n  rotateLeft(): void {\n      this.rotateValue -= 90;\n  }\n\n  rotateRight(): void {\n      this.rotateValue += 90;\n  }\n\n  getTransform(): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n  }\n\n  canZoomIn(): boolean {\n      return this.zoomValue < this.zoomMax ? true : false;\n  }\n\n  canZoomOut(): boolean {\n      return this.zoomValue > this.zoomMin ? true : false;\n  }\n\n  canDragOnZoom() {\n      return this.zoom && this.zoomValue > 1;\n  }\n\n  mouseDownHandler(e): void {\n      if (this.canDragOnZoom()) {\n          this.initialX = this.getClientX(e);\n          this.initialY = this.getClientY(e);\n          this.initialLeft = this.positionLeft;\n          this.initialTop = this.positionTop;\n          this.isMove = true;\n\n          e.preventDefault();\n      }\n  }\n\n  mouseUpHandler(e): void {\n      this.isMove = false;\n  }\n\n  mouseMoveHandler(e) {\n      if (this.isMove) {\n          this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n          this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n      }\n  }\n\n  private getClientX(e): number {\n      return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n  }\n\n  private getClientY(e): number {\n      return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n  }\n\n  private resetPosition() {\n      if (this.zoom) {\n          this.positionLeft = 0;\n          this.positionTop = 0;\n      }\n  }\n\n  private isKeyboardNext(e): boolean {\n      return e.keyCode === 39 ? true : false;\n  }\n\n  private isKeyboardPrev(e): boolean {\n      return e.keyCode === 37 ? true : false;\n  }\n\n  private isKeyboardEsc(e): boolean {\n      return e.keyCode === 27 ? true : false;\n  }\n\n  private openFullscreen(): void {\n      const element = <any>document.documentElement;\n\n      if (element.requestFullscreen) {\n          element.requestFullscreen();\n      } else if (element.msRequestFullscreen) {\n          element.msRequestFullscreen();\n      } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen();\n      } else if (element.webkitRequestFullscreen) {\n          element.webkitRequestFullscreen();\n      }\n  }\n\n  private closeFullscreen(): void {\n      if (this.isFullscreen()) {\n          const doc = <any>document;\n\n          if (doc.exitFullscreen) {\n              doc.exitFullscreen();\n          } else if (doc.msExitFullscreen) {\n              doc.msExitFullscreen();\n          } else if (doc.mozCancelFullScreen) {\n              doc.mozCancelFullScreen();\n          } else if (doc.webkitExitFullscreen) {\n              doc.webkitExitFullscreen();\n          }\n      }\n  }\n\n  private isFullscreen() {\n      const doc = <any>document;\n\n      return doc.fullscreenElement || doc.webkitFullscreenElement\n          || doc.mozFullScreenElement || doc.msFullscreenElement;\n  }\n\n\n\n  private show(first = false) {\n      this.loading = true;\n      this.stopAutoPlay();\n\n      this.onActiveChange.emit(this.index);\n\n      if (first || !this.animation) {\n          this._show();\n      } else {\n          setTimeout(() => this._show(), 600);\n      }\n  }\n\n  private _show() {\n      this.zoomValue = 1;\n      this.rotateValue = 0;\n      this.resetPosition();\n\n      this.src = this.getSafeUrl(<string>this.images[this.index]);\n      this.srcIndex = this.index;\n      this.description = this.descriptions[this.index];\n      this.changeDetectorRef.markForCheck();\n\n      setTimeout(() => {\n          if (this.isLoaded(this.previewImage.nativeElement)) {\n              this.loading = false;\n              this.startAutoPlay();\n              this.changeDetectorRef.markForCheck();\n          } else {\n              setTimeout(() => {\n                  if (this.loading) {\n                      this.showSpinner = true;\n                      this.changeDetectorRef.markForCheck();\n                  }\n              })\n\n              this.previewImage.nativeElement.onload = () => {\n                  this.loading = false;\n                  this.showSpinner = false;\n                  this.previewImage.nativeElement.onload = null;\n                  this.startAutoPlay();\n                  this.changeDetectorRef.markForCheck();\n              }\n          }\n      })\n  }\n\n  private isLoaded(img): boolean {\n      if (!img.complete) {\n          return false;\n      }\n\n      if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n          return false;\n      }\n\n      return true;\n  }\n\n}","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n    mediumSize?: NgxGalleryMediumImageSize;\n}\n\nexport class NgxGalleryImage implements INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n    mediumSize?: NgxGalleryMediumImageSize;\n\n    constructor(obj: INgxGalleryImage) {\n        this.small = obj.small;\n        this.medium = obj.medium;\n        this.big = obj.big;\n        this.description = obj.description;\n        this.url = obj.url;\n        this.label = obj.label;\n        this.mediumSize = obj.mediumSize;\n    }\n}\n\nexport interface INgxGalleryMediumImageSize {\n  width: number;\n  height: number;\n}\n\nexport class NgxGalleryMediumImageSize implements INgxGalleryMediumImageSize {\n  width: number;\n  height: number;\n\n  constructor(obj: INgxGalleryMediumImageSize) {\n    this.width = obj.width;\n    this.height = obj.height;\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n  HostListener,\n  AfterViewInit, Inject, PLATFORM_ID, AfterContentInit\n} from '@angular/core';\nimport { NgxGalleryOrderedImage } from '../ngx-gallery-ordered-image.model';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryAnimation } from '../ngx-gallery-animation.model';\nimport {isPlatformBrowser} from '@angular/common';\nimport {NgxGalleryMediumImageSize} from '../ngx-gallery-image.model';\n\n@Component({\n  selector: 'ngx-gallery-image',\n  templateUrl: './ngx-gallery-image.component.html',\n  styleUrls: ['./ngx-gallery-image.component.scss']\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges, AfterContentInit {\n  @Input() images: NgxGalleryOrderedImage[];\n  @Input() clickable: boolean;\n  @Input() selectedIndex: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() animation: string;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() bullets: boolean;\n\n  @Output() onClick = new EventEmitter();\n  @Output() onActiveChange = new EventEmitter();\n\n  private elementSize: NgxGalleryMediumImageSize;\n\n  canChangeImage = true;\n\n  private timer;\n\n  constructor(\n    private sanitization: DomSanitizer,\n    private elementRef: ElementRef,\n    private helperService: NgxGalleryHelperService,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {}\n\n  ngOnInit(): void {\n      if (this.arrows && this.arrowsAutoHide) {\n          this.arrows = false;\n      }\n\n      if (this.autoPlay) {\n          this.startAutoPlay();\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n      }\n  }\n\n  ngAfterContentInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.elementSize = new NgxGalleryMediumImageSize(\n        {\n                width: this.elementRef.nativeElement.offsetWidth,\n                height: this.elementRef.nativeElement.offsetHeight\n            }\n        );\n      this.setImageClasses();\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      if (this.arrowsAutoHide && !this.arrows) {\n          this.arrows = true;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.stopAutoPlay();\n      }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      if (this.arrowsAutoHide && this.arrows) {\n          this.arrows = false;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.startAutoPlay();\n      }\n  }\n\n  reset(index: number): void {\n      this.selectedIndex = index;\n  }\n\n  setImageClasses(): void {\n    if (this.elementSize === undefined) { return; }\n    for (const image of this.images) {\n      if (image.size !== undefined && image.size !== null) {\n        image.class = image.size.width <= this.elementSize.width && image.size.height <= this.elementSize.height ?\n          ' display-background-auto' :\n          ' display-background-contain';\n      } else {\n        image.class = ' display-background-contain';\n      }\n    }\n  }\n\n  getImages(): NgxGalleryOrderedImage[] {\n      if (!this.images) {\n          return [];\n      }\n\n      if (this.lazyLoading) {\n          let indexes = [this.selectedIndex];\n          let prevIndex = this.selectedIndex - 1;\n\n          if (prevIndex === -1 && this.infinityMove) {\n              indexes.push(this.images.length - 1)\n          } else if (prevIndex >= 0) {\n              indexes.push(prevIndex);\n          }\n\n          let nextIndex = this.selectedIndex + 1;\n\n          if (nextIndex == this.images.length && this.infinityMove) {\n              indexes.push(0);\n          } else if (nextIndex < this.images.length) {\n              indexes.push(nextIndex);\n          }\n\n          return this.images.filter((img, i) => indexes.indexOf(i) != -1);\n      } else {\n          return this.images;\n      }\n  }\n\n  startAutoPlay(): void {\n      this.stopAutoPlay();\n\n      this.timer = setInterval(() => {\n          if (!this.showNext()) {\n              this.selectedIndex = -1;\n              this.showNext();\n          }\n      }, this.autoPlayInterval);\n  }\n\n  stopAutoPlay() {\n      if (this.timer) {\n          clearInterval(this.timer);\n      }\n  }\n\n  handleClick(event: Event, index: number): void {\n      if (this.clickable) {\n          this.onClick.emit(index);\n\n          event.stopPropagation();\n          event.preventDefault();\n      }\n  }\n\n  show(index: number) {\n      this.selectedIndex = index;\n      this.onActiveChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n  }\n\n  showNext(): boolean {\n      if (this.canShowNext() && this.canChangeImage) {\n          this.selectedIndex++;\n\n          if (this.selectedIndex === this.images.length) {\n              this.selectedIndex = 0;\n          }\n\n          this.onActiveChange.emit(this.selectedIndex);\n          this.setChangeTimeout();\n\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  showPrev(): void {\n      if (this.canShowPrev() && this.canChangeImage) {\n          this.selectedIndex--;\n\n          if (this.selectedIndex < 0) {\n              this.selectedIndex = this.images.length - 1;\n          }\n\n          this.onActiveChange.emit(this.selectedIndex);\n          this.setChangeTimeout();\n      }\n  }\n\n  setChangeTimeout() {\n      this.canChangeImage = false;\n      let timeout = 1000;\n\n      if (this.animation === NgxGalleryAnimation.Slide\n          || this.animation === NgxGalleryAnimation.Fade) {\n              timeout = 500;\n      }\n\n      setTimeout(() => {\n          this.canChangeImage = true;\n      }, timeout);\n  }\n\n  canShowNext(): boolean {\n      if (this.images) {\n          return this.infinityMove || this.selectedIndex < this.images.length - 1\n              ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.images) {\n          return this.infinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n}\n","import { Component, OnChanges, Input, Output, EventEmitter, ElementRef, SimpleChanges, HostListener } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryOrder } from '../ngx-gallery-order.model';\n\n@Component({\n  selector: 'ngx-gallery-thumbnails',\n  templateUrl: './ngx-gallery-thumbnails.component.html',\n  styleUrls: ['./ngx-gallery-thumbnails.component.scss']\n})\nexport class NgxGalleryThumbnailsComponent implements OnChanges {\n\n  thumbnailsLeft: string;\n  thumbnailsMarginLeft: string;\n  mouseenter: boolean;\n  remainingCountValue: number;\n\n  minStopIndex = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() links: string[];\n  @Input() labels: string[];\n  @Input() linkTarget: string;\n  @Input() columns: number;\n  @Input() rows: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() margin: number;\n  @Input() selectedIndex: number;\n  @Input() clickable: boolean;\n  @Input() swipe: boolean;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() moveSize: number;\n  @Input() order: number;\n  @Input() remainingCount: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n\n  @Output() onActiveChange = new EventEmitter();\n\n  private index = 0;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n      private helperService: NgxGalleryHelperService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['selectedIndex']) {\n          this.validateIndex();\n      }\n\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef,\n          'thumbnails', () => this.moveRight(), () => this.moveLeft());\n      }\n\n      if (this.images) {\n          this.remainingCountValue = this.images.length - (this.rows * this.columns);\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      this.mouseenter = true;\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      this.mouseenter = false;\n  }\n\n  reset(index: number): void {\n      this.selectedIndex = index;\n      this.setDefaultPosition();\n\n      this.index = 0;\n      this.validateIndex();\n  }\n\n  getImages(): string[] | SafeResourceUrl[] {\n      if (!this.images) {\n          return [];\n      }\n\n      if (this.remainingCount) {\n          return this.images.slice(0, this.rows * this.columns);\n      } \n      else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n          let stopIndex = 0;\n\n          if (this.order === NgxGalleryOrder.Column) {\n              stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n          }\n          else if (this.order === NgxGalleryOrder.Page) {\n              stopIndex = this.index + ((this.columns * this.rows) * 2);\n          }\n\n          if (stopIndex <= this.minStopIndex) {\n              stopIndex = this.minStopIndex;\n          } else {\n              this.minStopIndex = stopIndex;\n          }\n\n          return this.images.slice(0, stopIndex);\n      } \n      else {\n          return this.images;\n      }\n  }\n\n  handleClick(event: Event, index: number): void {\n      if (!this.hasLink(index)) {\n          this.selectedIndex = index;\n          this.onActiveChange.emit(index);\n\n          event.stopPropagation();\n          event.preventDefault();\n      }\n  }\n\n  hasLink(index: number): boolean {\n      if (this.links && this.links.length && this.links[index]) return true;\n  }\n\n  moveRight(): void {\n      if (this.canMoveRight()) {\n          this.index += this.moveSize;\n          let maxIndex = this.getMaxIndex() - this.columns;\n\n          if (this.index > maxIndex) {\n              this.index = maxIndex;\n          }\n\n          this.setThumbnailsPosition();\n      }\n  }\n\n  moveLeft(): void {\n      if (this.canMoveLeft()) {\n          this.index -= this.moveSize;\n\n          if (this.index < 0) {\n              this.index = 0;\n          }\n\n          this.setThumbnailsPosition();\n      }\n  }\n\n  canMoveRight(): boolean {\n      return this.index + this.columns < this.getMaxIndex() ? true : false;\n  }\n\n  canMoveLeft(): boolean {\n      return this.index !== 0 ? true : false;\n  }\n\n  getThumbnailLeft(index: number): SafeStyle {\n      let calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n          calculatedIndex = Math.floor(index / this.rows);\n      }\n      else if (this.order === NgxGalleryOrder.Page) {\n          calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n      }\n      else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n          calculatedIndex = index % this.columns;\n      }\n      else {\n          calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.columns);\n  }\n\n  getThumbnailTop(index: number): SafeStyle {\n      let calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n          calculatedIndex = index % this.rows;\n      }\n      else if (this.order === NgxGalleryOrder.Page) {\n          calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n      }\n      else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n          calculatedIndex = Math.floor(index / this.columns);\n      }\n      else {\n          calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.rows);\n  }\n\n  getThumbnailWidth(): SafeStyle {\n      return this.getThumbnailDimension(this.columns);\n  }\n\n  getThumbnailHeight(): SafeStyle {\n      return this.getThumbnailDimension(this.rows);\n  }\n\n  setThumbnailsPosition(): void {\n      this.thumbnailsLeft = - ((100 / this.columns) * this.index) + '%'\n\n      this.thumbnailsMarginLeft = - ((this.margin - (((this.columns - 1)\n      * this.margin) / this.columns)) * this.index) + 'px';\n  }\n\n  setDefaultPosition(): void {\n      this.thumbnailsLeft = '0px';\n      this.thumbnailsMarginLeft = '0px';\n  }\n\n  canShowArrows(): boolean {\n      if (this.remainingCount) {\n          return false;\n      } else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\n          && (!this.arrowsAutoHide || this.mouseenter)) {\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  validateIndex(): void {\n      if (this.images) {\n          let newIndex;\n\n          if (this.order === NgxGalleryOrder.Column) {\n              newIndex = Math.floor(this.selectedIndex / this.rows);\n          } else {\n              newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n          }\n\n          if (this.remainingCount) {\n              newIndex = 0;\n          }\n\n          if (newIndex < this.index || newIndex >= this.index + this.columns) {\n              const maxIndex = this.getMaxIndex() - this.columns;\n              this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n              this.setThumbnailsPosition();\n          }\n      }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  private getThumbnailPosition(index: number, count: number): SafeStyle {\n      return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n          + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n  }\n\n  private getThumbnailDimension(count: number): SafeStyle {\n      if (this.margin !== 0) {\n          return this.getSafeStyle('calc(' + (100 / count) + '% - '\n              + (((count - 1) * this.margin) / count) + 'px)');\n      } else {\n          return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n      }\n  }\n\n  private getMaxIndex(): number {\n      if (this.order == NgxGalleryOrder.Page) {\n          let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n          if (this.images.length % this.getVisibleCount() > this.columns) {\n              maxIndex += this.columns;\n          }\n          else {\n              maxIndex += this.images.length % this.getVisibleCount();\n          }\n\n          return maxIndex;\n      }\n      else {\n          return Math.ceil(this.images.length / this.rows);\n      }\n  }\n\n  private getVisibleCount(): number {\n      return this.columns * this.rows;\n  }\n\n  private getSafeStyle(value: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(value);\n  }\n}\n","import { Component, OnInit, DoCheck, AfterViewInit, EventEmitter, Output, ViewChild, HostBinding, ElementRef, HostListener, Input } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOptions } from './ngx-gallery-options';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryImage } from './ngx-gallery-image.model';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\n\n@Component({\n  selector: 'ngx-gallery',\n  template: `\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n      <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n\n      <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n\n      <ngx-gallery-preview [images]=\"bigImages\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.previewDescription\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [closeIcon]=\"currentOptions?.closeIcon\" [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" [spinnerIcon]=\"currentOptions?.spinnerIcon\" [arrows]=\"currentOptions?.previewArrows\" [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" [swipe]=\"currentOptions?.previewSwipe\" [fullscreen]=\"currentOptions?.previewFullscreen\" [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" [closeOnClick]=\"currentOptions?.previewCloseOnClick\" [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" [animation]=\"currentOptions?.previewAnimation\" [autoPlay]=\"currentOptions?.previewAutoPlay\" [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.previewInfinityMove\" [zoom]=\"currentOptions?.previewZoom\" [zoomStep]=\"currentOptions?.previewZoomStep\" [zoomMax]=\"currentOptions?.previewZoomMax\" [zoomMin]=\"currentOptions?.previewZoomMin\" [zoomInIcon]=\"currentOptions?.zoomInIcon\" [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" [actions]=\"currentOptions?.actions\" [rotate]=\"currentOptions?.previewRotate\" [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" [download]=\"currentOptions?.previewDownload\" [downloadIcon]=\"currentOptions?.downloadIcon\" [bullets]=\"currentOptions?.previewBullets\" (onClose)=\"onPreviewClose()\" (onOpen)=\"onPreviewOpen()\" (onActiveChange)=\"previewSelect($event)\" [class.ngx-gallery-active]=\"previewEnabled\"></ngx-gallery-preview>\n    </div>\n  `,\n  styleUrls: ['./ngx-gallery.component.scss'],\n  providers: [NgxGalleryHelperService]\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\n  @Input() options: NgxGalleryOptions[];\n  @Input() images: NgxGalleryImage[];\n\n  @Output() imagesReady = new EventEmitter();\n  @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n  smallImages: string[] | SafeResourceUrl[];\n  mediumImages: NgxGalleryOrderedImage[];\n  bigImages: string[] | SafeResourceUrl[];\n  descriptions: string[];\n  links: string[];\n  labels: string[];\n\n  oldImages: NgxGalleryImage[];\n  oldImagesLength = 0;\n\n  selectedIndex = 0;\n  previewEnabled: boolean;\n\n  currentOptions: NgxGalleryOptions;\n\n  private breakpoint: number | undefined = undefined;\n  private prevBreakpoint: number | undefined = undefined;\n  private fullWidthTimeout: any;\n\n  @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n  @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n  @ViewChild(NgxGalleryThumbnailsComponent) thubmnails: NgxGalleryThumbnailsComponent;\n\n  @HostBinding('style.width') width: string;\n  @HostBinding('style.height') height: string;\n  @HostBinding('style.left') left: string;\n\n  constructor(private myElement: ElementRef) {}\n\n  ngOnInit() {\n      this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n      this.sortOptions();\n      this.setBreakpoint();\n      this.setOptions();\n      this.checkFullWidth();\n      if (this.currentOptions) {\n          this.selectedIndex = <number>this.currentOptions.startIndex;\n      }\n  }\n\n  ngDoCheck(): void {\n      if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n          || (this.images !== this.oldImages)) {\n          this.oldImagesLength = this.images.length;\n          this.oldImages = this.images;\n          this.setOptions();\n          this.setImages();\n\n          if (this.images && this.images.length) {\n              this.imagesReady.emit();\n          }\n\n          if (this.image) {\n              this.image.reset(<number>this.currentOptions.startIndex);\n          }\n\n          if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n              && this.images.length <= 1) {\n              this.currentOptions.thumbnails = false;\n              this.currentOptions.imageArrows = false;\n          }\n\n          this.resetThumbnails();\n      }\n  }\n\n  ngAfterViewInit(): void {\n      this.checkFullWidth();\n  }\n\n  @HostListener('window:resize') onResize() {\n      this.setBreakpoint();\n\n      if (this.prevBreakpoint !== this.breakpoint) {\n          this.setOptions();\n          this.resetThumbnails();\n      }\n\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n\n          if (this.fullWidthTimeout) {\n              clearTimeout(this.fullWidthTimeout);\n          }\n\n          this.fullWidthTimeout = setTimeout(() => {\n              this.checkFullWidth();\n          }, 200);\n      }\n  }\n\n  getImageHeight(): string {\n      return (this.currentOptions && this.currentOptions.thumbnails) ?\n          this.currentOptions.imagePercent + '%' : '100%';\n  }\n\n  getThumbnailsHeight(): string {\n      if (this.currentOptions && this.currentOptions.image) {\n          return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n          + this.currentOptions.thumbnailsMargin + 'px)';\n      } else {\n          return '100%';\n      }\n  }\n\n  getThumbnailsMarginTop(): string {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n          return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n          return '0px';\n      }\n  }\n\n  getThumbnailsMarginBottom(): string {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n          return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n          return '0px';\n      }\n  }\n\n  openPreview(index: number): void {\n      if (this.currentOptions.previewCustom) {\n          this.currentOptions.previewCustom(index);\n      } else {\n          this.previewEnabled = true;\n          this.preview.open(index);\n      }\n  }\n\n  onPreviewOpen(): void {\n      this.previewOpen.emit();\n\n      if (this.image && this.image.autoPlay) {\n          this.image.stopAutoPlay();\n      }\n  }\n\n  onPreviewClose(): void {\n      this.previewEnabled = false;\n      this.previewClose.emit();\n\n      if (this.image && this.image.autoPlay) {\n          this.image.startAutoPlay();\n      }\n  }\n\n  selectFromImage(index: number) {\n      this.select(index);\n  }\n\n  selectFromThumbnails(index: number) {\n      this.select(index);\n\n      if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n          && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n          this.openPreview(this.selectedIndex);\n      }\n  }\n\n  show(index: number): void {\n      this.select(index);\n  }\n\n  showNext(): void {\n      this.image.showNext();\n  }\n\n  showPrev(): void {\n      this.image.showPrev();\n  }\n\n  canShowNext(): boolean {\n      if (this.images && this.currentOptions) {\n          return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\n              ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.images && this.currentOptions) {\n          return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  previewSelect(index: number) {\n      this.previewChange.emit({index, image: this.images[index]});\n  }\n\n  moveThumbnailsRight() {\n      this.thubmnails.moveRight();\n  }\n\n  moveThumbnailsLeft() {\n      this.thubmnails.moveLeft();\n  }\n\n  canMoveThumbnailsRight() {\n      return this.thubmnails.canMoveRight();\n  }\n\n  canMoveThumbnailsLeft() {\n      return this.thubmnails.canMoveLeft();\n  }\n\n  private resetThumbnails() {\n      if (this.thubmnails) {\n          this.thubmnails.reset(<number>this.currentOptions.startIndex);\n      }\n  }\n\n  private select(index: number) {\n      this.selectedIndex = index;\n\n      this.change.emit({\n          index,\n          image: this.images[index]\n      });\n  }\n\n  private checkFullWidth(): void {\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n          this.width = document.body.clientWidth + 'px';\n          this.left = (-(document.body.clientWidth -\n              this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\n      }\n  }\n\n  private setImages(): void {\n      this.smallImages = this.images.map((img) => <string>img.small);\n      this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n          src: img.medium,\n          index: i,\n          size: img.mediumSize\n      }));\n      this.bigImages = this.images.map((img) => <string>img.big);\n      this.descriptions = this.images.map((img) => <string>img.description);\n      this.links = this.images.map((img) => <string>img.url);\n      this.labels = this.images.map((img) => <string>img.label);\n  }\n\n  private setBreakpoint(): void {\n      this.prevBreakpoint = this.breakpoint;\n      let breakpoints;\n\n      if (typeof window !== 'undefined') {\n          breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n              .map((opt) => opt.breakpoint);\n      }\n\n      if (breakpoints && breakpoints.length) {\n          this.breakpoint = breakpoints.pop();\n      } else {\n          this.breakpoint = undefined;\n      }\n  }\n\n  private sortOptions(): void {\n      this.options = [\n          ...this.options.filter((a) => a.breakpoint === undefined),\n          ...this.options\n              .filter((a) => a.breakpoint !== undefined)\n              .sort((a, b) => b.breakpoint - a.breakpoint)\n      ];\n  }\n\n  private setOptions(): void {\n      this.currentOptions = new NgxGalleryOptions({});\n\n      this.options\n          .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n          .map((opt) => this.combineOptions(this.currentOptions, opt));\n\n      this.width = <string>this.currentOptions.width;\n      this.height = <string>this.currentOptions.height;\n  }\n\n  private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n      Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-action',\n  templateUrl: './ngx-gallery-action.component.html',\n  styleUrls: ['./ngx-gallery-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent {\n  @Input() icon: string;\n  @Input() disabled = false;\n  @Input() titleText = '';\n\n  @Output() onClick: EventEmitter<Event> = new EventEmitter();\n\n  handleClick(event: Event) {\n      if (!this.disabled) {\n          this.onClick.emit(event);\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-arrows',\n  templateUrl: './ngx-gallery-arrows.component.html',\n  styleUrls: ['./ngx-gallery-arrows.component.scss']\n})\nexport class NgxGalleryArrowsComponent{\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n\n  @Output() onPrevClick = new EventEmitter();\n  @Output() onNextClick = new EventEmitter();\n\n  handlePrevClick(): void {\n      this.onPrevClick.emit();\n  }\n\n  handleNextClick(): void {\n      this.onNextClick.emit();\n  }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-bullets',\n  templateUrl: './ngx-gallery-bullets.component.html',\n  styleUrls: ['./ngx-gallery-bullets.component.scss']\n})\nexport class NgxGalleryBulletsComponent {\n  @Input() count: number;\n  @Input() active: number = 0;\n\n  @Output() onChange = new EventEmitter();\n\n  getBullets(): number[] {\n      return Array(this.count);\n  }\n\n  handleChange(event: Event, index: number): void {\n      this.onChange.emit(index);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxGalleryComponent } from './ngx-gallery.component';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryActionComponent } from './ngx-gallery-action/ngx-gallery-action.component';\nimport { NgxGalleryArrowsComponent } from './ngx-gallery-arrows/ngx-gallery-arrows.component';\nimport { NgxGalleryBulletsComponent } from './ngx-gallery-bullets/ngx-gallery-bullets.component';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    NgxGalleryComponent,\n    NgxGalleryPreviewComponent, \n    NgxGalleryImageComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryActionComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryBulletsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxGalleryComponent]\n})\nexport class NgxGalleryModule { }\n"]}